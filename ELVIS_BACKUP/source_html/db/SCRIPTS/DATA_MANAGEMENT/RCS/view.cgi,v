head	1.4;
access;
symbols;
locks
	dittma75:1.4; strict;
comment	@# @;


1.4
date	2015.04.30.04.10.47;	author dittma75;	state Exp;
branches;
next	1.3;

1.3
date	2015.04.29.07.25.08;	author dittma75;	state Exp;
branches;
next	1.2;

1.2
date	2015.04.29.02.32.00;	author dittma75;	state Exp;
branches;
next	1.1;

1.1
date	2015.04.28.16.24.33;	author dittma75;	state Exp;
branches;
next	;


desc
@Initial Commit of script for displaying views of entities.
@


1.4
log
@Added update.cgi.
@
text
@#!/usr/bin/perl
use warnings;
use strict;
use CGI;
require '../db_connect.pl';

my $dbh = getDBH();

my $CGI = new CGI;
my $type = $CGI->param('type');
my $ID = $CGI->param('ID');
my $sql = "CALL view_$type($ID)";
my $sth = $dbh->prepare($sql);
#This will throw a warning if warnings are on because it is
#used only once, but that's fine because DBI is included in db_connect
$sth->execute or die "SQL ERROR: $DBI::errstr\n";
print $CGI->header(-type=>'text/html', -author =>'Kevin Dittmar');
print $CGI->start_html(-title=>"AmazingBooks:  view_$type: $ID",
                       -author=>'dittma75@@students.rowan.edu');
print $CGI->a({-href=>"../$type"."_index.cgi"}, 'Back'), "<br/>\n";

my $ISBN;
my $title;
my $size;

while (my @@item = $sth->fetchrow_array)
{
    print '<form action="./update.cgi" id="u_form">'."\n";
    print '<input type="hidden"'.
               'name="'.$sth->{NAME}->[0].
               '"value="'.$item[0].'">'."\n";
    print "<table>\n";
    for (my $i = 0; $i <= $#item; $i++)
    {
        #Don't print passwords
        if ($sth->{NAME}->[$i] ne 'pass')
        {
            #Save the ISBN and title for adding authors if needed.
            if ($sth->{NAME}->[$i] eq 'ISBN')
            {
                $ISBN = $item[$i];
                $size = 13;
            }
            if ($sth->{NAME}->[$i] eq 'title')
            {
                $title = $item[$i];
                $size = 45;
            }
            #Print the name of the field.
            print "<tr><td>$sth->{NAME}->[$i]: ";
            #If it's a price, print a dollar sign before the value.
            if ($sth->{NAME}->[$i] eq 'price')
            {
                print '$';
            }
            #If it's a gender, expand the name of the gender.
            if ($sth->{NAME}->[$i] eq 'gender')
            {
                print "<select name=\"gender\" form=\"u_form\">\n";
                #F means female
                if ($item[$i] eq 'F')
                {
                    print '<option value="F" selected="selected">Female</option>\n
                           <option value="M">Male</option>', "\n";
                }
                #The only other option is M for male.
                else
                {
                    print '<option value="F">Female</option>\n
                           <option value="M" selected="selected">Male</option>', "\n";
                }
                print "</select>\n";
            }
            #If it's not a gender, print it normally.
            else
            {
                if ($i == 0)
                {
                    print $item[$i], "\n";
                }
                else
                {
                    print $CGI->textfield($sth->{NAME}->[$i], "$item[$i]", 
                                          '60', "$size"), "\n";
                }
            }
            print "</td></tr>\n";
        }
    }
    print '<tr><td><input type="submit" value="Update"></td></tr>';
    print "</table><br/>\n";
    print '<input type="hidden" name="type" value="'.$type.'">'."\n";
    print "</form>\n";
}

#Forms for updating book's join tables wrote and in.
if ($type eq 'book')
{
    print '<form action="./add_author.cgi">'."\n";
    print "<table>\n";
    print "<tr><td>Author ID<td></tr><td>".$CGI->textfield('authorID','',20,11)."</td></tr>\n";
    print '<tr><td><input type="submit" name="author_submit" value="Add"></td></tr>';
    print "</table>\n";
    print '<input type="hidden" name="ISBN" value="'.$ISBN.'">'."\n";
    print '<input type="hidden" name="title" value="'.$title.'">'."\n";
    print "</form><br/>\n";

    print '<form action="./add_genre.cgi">'."\n";
    print "<table>\n";
    print "<tr><td>Genre<td></tr><td>".$CGI->textfield('genrename','',60,45)."</td></tr>\n";
    print '<tr><td><input type="submit" name="genre_submit" value="Add"></td></tr>';
    print "</table>\n";
    print '<input type="hidden" name="ISBN" value="'.$ISBN.'">'."\n";
    print '<input type="hidden" name="title" value="'.$title.'">'."\n";
    print "</form>\n";
}

print $CGI->end_html, "\n";
$sth->finish();
$dbh->disconnect();

@


1.3
log
@View has a book form for adding genres and authors.
@
text
@d24 1
d28 4
d42 1
d47 1
d59 1
d63 2
a64 1
                    print "Female";
d69 2
a70 1
                    print "Male";
d72 1
d77 9
a85 1
                print "$item[$i]";
d90 1
d92 2
@


1.2
log
@view.cgi no longer prints pass, prints a $ for price, and
expands gender names.
@
text
@d20 5
a24 1
print $CGI->a({-href=>"../$type"."_index.cgi"}, 'Back'), "\n";
d33 9
d71 19
d91 3
d95 1
@


1.1
log
@Initial revision
@
text
@d9 13
a21 1
if (defined $ARGV[0] and defined $ARGV[1])
d23 2
a24 11
    my $sql = "CALL $ARGV[0]($ARGV[1])";
    my $sth = $dbh->prepare($sql);
    #This will throw a warning if warnings are on because it is
    #used only once, but that's fine because DBI is included in db_connect
    $sth->execute or die "SQL ERROR: $DBI::errstr\n";
    my $CGI = new CGI;
        print $CGI->header(-type=>'text/html', -author =>'Kevin Dittmar');
        print $CGI->start_html(-title=>"AmazingBooks:  $ARGV[0]: $ARGV[1]",
                           -author=>'dittma75@@students.rowan.edu');
        print $CGI->a({-href=>'../index.html'}, 'Back'), "\n";
    while (my @@item = $sth->fetchrow_array)
d26 2
a27 2
        print "<table>\n";
        for (my $i = 0; $i <= $#item; $i++)
d29 27
a55 1
            print "<tr><td>$sth->{NAME}->[$i]: $item[$i]</td></tr>\n";
a56 2
        print "</table>\n";
        print $CGI->end_html, "\n";
d58 1
a58 6
    $sth->finish();
    $dbh->disconnect();
}
else
{
    die "No ISBN specified";
d60 4
@
